---
# tasks file for roles/kapture


#######################
### System STUFF
#######################

- name: set hostname
  hostname: name="{{ systemname }}"

- name: ensure kapture group is setup correctly
  group: name=kapture system=yes state=present

- name: ensure {{ kapture_user }} user is setup correctly
  user:
    groups: sudo,kapture
    name: "{{ kapture_user }}"
    createhome: yes
    home: /var/lib/kapture
    state: present

- name: ensure pi user is in kapture group
  user: name=pi groups=kapture,sudo

- name: set permissions on home directory
  file:
    recurse: yes
    path: /var/lib/kapture
    mode: 0775
    group: kapture

- name: install pip from apt-get if not Raspbian
  apt: pkg=python-pip state=present
  when: ansible_lsb.id != "Raspbian"

- name: install pip using easy_install if Raspbian
  easy_install: name=pip state=present
  when: ansible_lsb.id == "Raspbian"

- name: install ansible for running locally
  pip: name=ansible
- name: install httplib2 for calling plex commands via ansible
  pip: name=httplib2

#######################
### PLEX STUFF
#######################

- name: setup plex repo key [arm]
  apt_key: url='https://dev2day.de/pms/dev2day-pms.gpg.key' state=present
  when: ansible_architecture == 'armv7l'

- name: setup plex repo [arm]
  apt_repository: repo='deb https://dev2day.de/pms/ jessie main' state=present
  when: ansible_architecture == 'armv7l'

- name: setup plex repo [x86_64]
  apt_repository: repo='deb http://ubuntu.azuras.net/ trusty main' state=present
  when: ansible_architecture == 'x86_64'

- name: setup plex server
  apt: pkg={{ item }} state=present update_cache=yes force=yes
  with_items:
    - libc6
    - libav-tools
    - plexmediaserver

- name: wait for plex to be instanciated
  wait_for: port=32400 host=localhost state=started

- name: check to see if plex folders is already setup
  uri: url=http://localhost:32400/library/sections return_content=yes
  register: plex_folder_response

- name: setup folders on disk within plex
  command: "curl -XPOST -s http://localhost:32400/library/sections?name={{item.name}}&type={{item.type}}&location={{item.location}}&agent={{item.agent}}&scanner={{item.scanner}}&language=en"
  with_items:
    - name: Movies
      location: "{{ storage_path }}/movies"
      type: movie
      agent: com.plexapp.agents.imdb
      scanner: Plex%20Movie%20Scanner
    - name: TV%20Shows
      location: "{{ storage_path }}/tvshows"
      type: show
      agent: com.plexapp.agents.thetvdb
      scanner: Plex%20Series%20Scanner
    - name: Music
      location: "{{ storage_path }}/music"
      type: artist
      agent: com.plexapp.agents.lastfm
      scanner: Plex%20Music%20Scanner
    - name: Photos
      location: "{{ storage_path }}/photos"
      type: photo
      agent: com.plexapp.agents.none
      scanner: Plex%20Photo%20Scanner
  when: item.location not in plex_folder_response.content

- name: apply some plex settings
  command: curl -XPUT http://localhost:32400/:/prefs?{{item.key}}={{item.value}}
  with_items:
    - {key: FSEventLibraryUpdatesEnabled, value: true}
    - {key: FSEventLibraryPartialScanEnabled, value: true}
    - {key: allowMediaDeletion, value: true}
    - {key: EnableIPv6, value: true}
    - {key: AcceptedEULA, value: true}



- name: install conversion script (convert-avi-to-x264.sh) for if plex cant convert on the fly
  copy:
    src: convert-avi-to-x264.sh
    dest: /usr/local/bin/convert-avi-to-x264.sh
    mode: 0755
    owner: root
    group: root


#######################
### TRANSMISSION STUFF
#######################
- name: setup transmission-daemon
  apt: pkg=transmission-daemon state=present

- name: stop transmission
  service: name=transmission-daemon state=stopped

- name: ensure that transmission user has proper group privileges
  user: name=debian-transmission groups=kapture

- name: drop in transmission-daemon config file
  template:
    src: settings.json.j2
    dest: /etc/transmission-daemon/settings.json
    mode: 0644

- name: start transmission
  service: name=transmission-daemon state=started




#######################
### NETATALK STUFF
#######################
- name: install netatalk
  apt: pkg=netatalk state=present

- name: config netatalk
  template:
    src: AppleVolumes.default.j2
    dest: /etc/netatalk/AppleVolumes.default
    mode: 0644
  notify: restart netatalk




#######################
### FLEXGET STUFF
#######################

# should already have pip from initial setup
- name: install flexget and deps
  pip: name="{{ item }}"
  with_items:
    - flexget
    - transmissionrpc
  notify: restart transmission

- name: create flexget config dir
  file:
    dest: "~{{ kapture_user }}/.flexget"
    state: directory
    owner: "{{ kapture_user }}"

- name: flexget config file
  template:
    src: flexget-config.yml.j2
    dest: "~{{ kapture_user }}/.flexget/config.yml"
    mode: 0644

- name: flexget cron job
  cron:
    name: flexget
    user: "{{ kapture_user }}"
    minute: "*/{{ flexget_check_frequency }}"
    job: "/usr/bin/python2.7 /usr/local/bin/flexget --cron execute "
